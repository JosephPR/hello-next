{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Layout from '../comps/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar liStyle = {\n  listStyleType: 'none'\n};\n\nvar Amazing = function Amazing(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, \"The Amzing Race\"), React.createElement(\"ul\", null, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      style: liStyle,\n      key: show.id\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id)\n    }, React.createElement(\"a\", null, show.name)));\n  })));\n};\n\nAmazing.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=the-amazing-race');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Amazing;","map":{"version":3,"sources":["/Users/josephreilly/Documents/Development/4th-mod/practice/hello-next/pages/amazing.js"],"names":["Layout","Link","fetch","liStyle","listStyleType","Amazing","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,aAAa,EAAE;AADH,CAAhB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB,oBAAC,MAAD,QACE,kDADF,EAEE,gCACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,KAAK,EAAEN,OAAX;AAAoB,MAAA,GAAG,EAAEM,IAAI,CAACC;AAA9B,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB;AAA/B,OACE,+BAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADmB;AAAA,CAArB;;AAeAN,OAAO,CAACO,eAAR;AAAA;AAAA;AAAA;AAAA,yBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACNV,KAAK,CAAC,wDAAD,CADC;;AAAA;AAClBW,UAAAA,GADkB;AAAA;AAAA,iBAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBC,UAAAA,IAFkB;AAIxBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJwB,2CAMjB;AACLX,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAW,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AADF,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAWA,eAAeJ,OAAf","sourcesContent":["import Layout from '../comps/Layout'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch';\n\nconst liStyle = {\n    listStyleType: 'none'\n}\n\nconst Amazing = props => (\n  <Layout>\n    <h1>The Amzing Race</h1>\n    <ul>\n      {props.shows.map(show => (\n        <li style={liStyle} key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nAmazing.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=the-amazing-race');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Amazing;\n"]},"metadata":{},"sourceType":"module"}